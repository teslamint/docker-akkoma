version: '3.3'

services:
  caddy:
    image: ${CADDY_IMAGE:-caddy}:${CADDY_TAG:-alpine}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -q --spider --proxy=off http://localhost/api/v1/pleroma/healthcheck || exit 1",
        ]
    restart: unless-stopped
    networks:
      - pleroma
    ports:
      - "127.0.0.1:${CADDY_PORT:-8080}:80"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      web:
        condition: service_started

  postgres:
    image: ${POSTGRES_IMAGE:-postgres}:${POSTGRES_TAG:-15-alpine}
    shm_size: 1gb
    hostname: db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "pleroma"]
    restart: unless-stopped
    ports:
      - "127.0.0.1:${POSTGRES_PORT:-5432}:5432"
    networks:
      - pleroma
    env_file:
      - .env.postgres
    volumes:
      - ./postgres:/var/lib/postgresql/data

  meilisearch:
    image: ${MEILISEARCH_IMAGE:-getmeili/meilisearch}:${MEILISEARCH_TAG:-v1.2.0}
    ports:
      - "127.0.0.1:${MEILISEARCH_PORT:-7700}:7700"
    networks:
      - pleroma
    env_file:
      - .env.search
    volumes:
      - ./meili_data:/meili_data

  web:
    image: ${PLEROMA_IMAGE:-teslamint/akkoma}:${PLEROMA_TAG:-develop}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -q --spider --proxy=off http://127.0.0.1:4000/api/v1/pleroma/healthcheck || exit 1",
        ]
    restart: unless-stopped
    networks:
      - pleroma
    volumes:
      - ./pleroma:/var/lib/pleroma
    env_file:
      - .env.pleroma
    depends_on:
      postgres:
        condition: service_healthy
      meilisearch:
        condition: service_started

  pghero:
    image: ${PGHERO_IMAGE:-ankane/pghero}:${PGHERO_TAG:-latest}
    networks:
      - pleroma
    env_file:
      - .env.pghero
    depends_on:
      postgres:
        condition: service_healthy

  cloudflared:
    image: ${CLOUDFLARED_IMAGE:-cloudflare/cloudflared}:${CLOUDFLARED_TAG:-latest}
    networks:
      - pleroma
    depends_on:
      caddy:
        condition: service_started
    env_file:
      - .env.cloudflared
    volumes:
      - ./cloudflared:/etc/cloudflared
    command: "tunnel run"

  budae:
    image: perillamint/budae-jjigae:latest
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '10'
        labels: 'docker_logs'
    restart: always
    command:
      - "/usr/bin/budae-jjigae"
      - "--backend"
      - "web:4000"
    networks:
      - pleroma
    environment:
      - RUST_LOG=info
    depends_on:
      - web

volumes:
  caddy_data:
  caddy_config:

networks:
  pleroma:
    name: pleroma_v6
    external: true
