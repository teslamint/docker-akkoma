version: '3.3'

services:
  nginx:
    image: nginx:1.22-alpine
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -q --spider --proxy=off http://localhost/api/v1/pleroma/healthcheck || exit 1",
        ]
    restart: unless-stopped
    networks:
      - pleroma
    environment:
      NGINX_PORT: 80
    ports:
      - "127.0.0.1:8080:80"
      - "127.0.0.1:10080:10080"
    volumes:
      - ./templates:/etc/nginx/templates
      - nginx_cache:/var/cache/nginx
      - nginx_pid:/var/run
    depends_on:
      web:
        condition: service_healthy
      pghero:
        condition: service_started

  postgres:
    image: postgres:12-alpine
    hostname: db
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "pleroma"]
    restart: unless-stopped
    ports:
      - "127.0.0.1:55432:5432"
    networks:
      - pleroma
    env_file:
      - .env.postgres
    volumes:
      - ./postgres:/var/lib/postgresql/data

  meilisearch:
    image: getmeili/meilisearch:v0.30
    ports:
      - "127.0.0.1:57700:7700"
    networks:
      - pleroma
    env_file:
      - .env.search
    volumes:
      - ./meili_data:/meili_data

  web:
    image: teslamint/akkoma:develop
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -q --spider --proxy=off http://localhost:4000/api/v1/pleroma/healthcheck || exit 1",
        ]
    restart: unless-stopped
    networks:
      - pleroma
    volumes:
      - ./pleroma:/var/lib/pleroma
      - ./config.exs:/etc/pleroma/config.exs:ro
    env_file:
      - .env.pleroma
    depends_on:
      postgres:
        condition: service_healthy
      meilisearch:
        condition: service_started

  pghero:
    image: ankane/pghero
    networks:
      - pleroma
    env_file:
      - .env.pghero
    depends_on:
      postgres:
        condition: service_healthy
  
  cloudflared:
    image: cloudflare/cloudflared:latest
    networks:
      - pleroma
    depends_on:
      nginx:
        condition: service_healthy
    env_file:
      - .env.cloudflared
    volumes:
      - ./cloudflared:/etc/cloudflared
    command: "tunnel run"

volumes:
  nginx_cache:
  nginx_pid:

networks:
  pleroma:
